# Generated by Django 5.2.7 on 2025-10-09 15:14

import uuid

import apps.users.models
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
        ("departments", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(blank=True, null=True, verbose_name="last login"),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "username",
                    models.CharField(blank=True, max_length=150, null=True, unique=True),
                ),
                ("first_name", models.CharField(max_length=255)),
                ("last_name", models.CharField(max_length=255)),
                ("email", models.EmailField(max_length=254, unique=True)),
                ("avatar", models.URLField(blank=True, null=True)),
                ("metadata", models.JSONField(blank=True, default=dict, null=True)),
                ("provider", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "provider_id",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("STUDENT", "student"),
                            ("LECTURER", "lecturer"),
                            ("ADMIN", "admin"),
                            ("MODERATOR", "moderator"),
                        ],
                        default="STUDENT",
                        max_length=20,
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("is_staff", models.BooleanField(default=False)),
                ("year", models.PositiveIntegerField(blank=True, null=True)),
                ("semester", models.PositiveIntegerField(blank=True, null=True)),
                (
                    "student_id",
                    models.CharField(blank=True, max_length=30, null=True, unique=True),
                ),
                (
                    "staff_id",
                    models.CharField(blank=True, max_length=30, null=True, unique=True),
                ),
                ("date_joined", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "department",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="users",
                        to="departments.department",
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "User",
                "verbose_name_plural": "Users",
                "db_table": "users",
                "ordering": ["-date_joined"],
                "indexes": [
                    models.Index(fields=["email"], name="users_email_4b85f2_idx"),
                    models.Index(fields=["student_id"], name="users_student_2d3a08_idx"),
                    models.Index(fields=["staff_id"], name="users_staff_i_7403f9_idx"),
                    models.Index(fields=["role"], name="users_role_0ace22_idx"),
                ],
            },
            managers=[
                ("objects", apps.users.models.UserManager()),
            ],
        ),
    ]
